rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ===== Helpers =====
    function isSignedIn() {
      return request.auth != null;
    }

    // Bypass total para administradores (custom claim: admin=true)
    function isAdmin() {
      return isSignedIn() && request.auth.token.admin == true;
    }

    // Confere se o usuário logado é o professor dono da disciplina
    function isProfessorDaDisciplina(discId) {
      return exists(/databases/$(database)/documents/disciplinas/$(discId)) &&
             get(/databases/$(database)/documents/disciplinas/$(discId)).data.professorId == request.auth.uid;
    }

    /* ===========================
       USUÁRIOS (perfil do app)
       /usuarios/{userId}
       =========================== */
    match /usuarios/{userId} {
      // Admin pode tudo; usuário comum só no próprio doc
      allow read, write: if isAdmin() || (isSignedIn() && request.auth.uid == userId);
    }

    /* ===========================
       COUNTERS (sequenciamento)
       /counters/{counterId}
       =========================== */
    match /counters/{counterId} {
      allow read: if isAdmin() || isSignedIn();
      // restringe escrita ao doc "alunos" (geração de matrícula) ou admin
      allow write: if isAdmin() || (isSignedIn() && counterId == "alunos");
    }

    /* ===========================
       DISCIPLINAS
       /disciplinas/{disciplinaId}
       =========================== */
    match /disciplinas/{disciplinaId} {
      // leitura para autenticados
      allow read: if isSignedIn();

      // create: professor que está criando vira dono
      allow create: if isAdmin() ||
        (isSignedIn() && request.resource.data.professorId == request.auth.uid);

      // update/delete: somente admin ou professor dono
      allow update, delete: if isAdmin() ||
        (isSignedIn() && resource.data.professorId == request.auth.uid);
    }

    /* ===========================
       ALUNOS
       /alunos/{alunoId}
       =========================== */
    match /alunos/{alunoId} {
      // por ora: qualquer autenticado pode ler/escrever aluno
      // (se quiser, depois apertamos isso)
      allow read, write: if isAdmin() || isSignedIn();
    }

    /* ===========================
       SEMESTRES
       /semestres/{semId}
       =========================== */
    match /semestres/{semId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }

    /* ===========================
       TURMAS
       /turmas/{turmaId}
       =========================== */
    match /turmas/{turmaId} {
      allow read: if isSignedIn();
      // por ora, só admin escreve (podemos delegar depois)
      allow create, update, delete: if isAdmin();
    }

    /* ===========================
       MATRÍCULAS DE TURMA (unicidade por ID)
       /matriculasTurma/{id}
       =========================== */
    match /matriculasTurma/{id} {
      allow read: if isSignedIn();

      // cria somente se o ID for exatamente turmaId_alunoId
      allow create: if isSignedIn()
        && id == (request.resource.data.turmaId + "_" + request.resource.data.alunoId)
        && request.resource.data.status in ["ativo", "cancelado"];

      // atualização/remoção: admin (podemos abrir depois para coordenadores)
      allow update, delete: if isAdmin();
    }

    /* ===========================
       TIPOS DE AVALIAÇÃO
       /tiposAvaliacao/{tipoId}
       =========================== */
    match /tiposAvaliacao/{tipoId} {
      // leitura liberada para autenticados
      allow read: if isSignedIn();

      // create: professor da disciplina (ou admin)
      allow create: if isAdmin() ||
        (isSignedIn() &&
         request.resource.data.disciplinaId is string &&
         isProfessorDaDisciplina(request.resource.data.disciplinaId));

      // update/delete: professor dono (ou admin)
      allow update, delete: if isAdmin() ||
        (isSignedIn() &&
         resource.data.disciplinaId is string &&
         isProfessorDaDisciplina(resource.data.disciplinaId));
    }

    /* ===========================
       MATRÍCULAS (por disciplina)
       /matriculas/{matriculaId}
       =========================== */
    match /matriculas/{matriculaId} {
      allow read, write: if isAdmin() || isSignedIn();
    }

    /* ===========================
       NOTAS
       /notas/{notaId}
       =========================== */
    match /notas/{notaId} {
      allow read, write: if isAdmin() || isSignedIn();
    }
  }
}
